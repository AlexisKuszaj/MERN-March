{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexs\\\\Desktop\\\\CodingDojo\\\\MERN\\\\MERN-March\\\\practice\\\\boxgen\\\\boxgen\\\\src\\\\components\\\\NinjaDisplay.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NinjaDisplay = props => {\n  // using the getter and setter that were passed from my parent (App.js) component\n  const {\n    ninjaBoxArray\n  } = props;\n\n  /* \r\n    Display the values held in state - \r\n      the ninjaBoxArray will update when the form is submitted \r\n    When state is updated, it will cause this component to re-render this content\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ninjaBoxArray.map((box, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"inline-block\",\n        margin: \"10px\",\n        height: box.size,\n        width: box.size,\n        backgroundColor: box.color\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = NinjaDisplay;\nexport default NinjaDisplay;\nvar _c;\n$RefreshReg$(_c, \"NinjaDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NinjaDisplay","props","ninjaBoxArray","children","map","box","index","style","display","margin","height","size","width","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alexs/Desktop/CodingDojo/MERN/MERN-March/practice/boxgen/boxgen/src/components/NinjaDisplay.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst NinjaDisplay = (props) => {\r\n  // using the getter and setter that were passed from my parent (App.js) component\r\n  const { ninjaBoxArray } = props;\r\n\r\n  /* \r\n    Display the values held in state - \r\n      the ninjaBoxArray will update when the form is submitted \r\n    When state is updated, it will cause this component to re-render this content\r\n  */\r\n  return (\r\n    <div>\r\n      {\r\n        ninjaBoxArray.map((box, index) => (\r\n          <div key={index} style={{ \r\n              display: \"inline-block\",\r\n              margin: \"10px\",\r\n              height: box.size, \r\n              width: box.size, \r\n              backgroundColor: box.color\r\n              }}>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NinjaDisplay;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B;EACA,MAAM;IAAEC;EAAc,CAAC,GAAGD,KAAK;;EAE/B;AACF;AACA;AACA;AACA;EACE,oBACEF,OAAA;IAAAI,QAAA,EAEID,aAAa,CAACE,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC3BP,OAAA;MAAiBQ,KAAK,EAAE;QACpBC,OAAO,EAAE,cAAc;QACvBC,MAAM,EAAE,MAAM;QACdC,MAAM,EAAEL,GAAG,CAACM,IAAI;QAChBC,KAAK,EAAEP,GAAG,CAACM,IAAI;QACfE,eAAe,EAAER,GAAG,CAACS;MACrB;IAAE,GANIR,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAQhB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAEV,CAAC;AAAAC,EAAA,GAzBKnB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}