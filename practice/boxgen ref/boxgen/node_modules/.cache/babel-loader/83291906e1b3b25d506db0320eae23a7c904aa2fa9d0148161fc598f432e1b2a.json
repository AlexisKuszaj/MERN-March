{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexs\\\\Desktop\\\\CodingDojo\\\\MERN\\\\MERN-March\\\\practice\\\\boxgen ref\\\\boxgen\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport Form from './components/Form';\nimport Display from './components/Display';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // holding an array of strings for the colors input\n  const [boxColorArray, setBoxColorArray] = useState([]);\n\n  // Ninja Bonus: Add a second input that takes in an integer. \n  //    This integer will allow the user to specify the height and width of the generated box.\n  //    Using an object to hold both the integer and the color together\n  const [ninjaBoxArray, setNinjaBoxArray] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Standard Assignment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      boxColorArray: boxColorArray,\n      setBoxColorArray: setBoxColorArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      boxColorArray: boxColorArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/55V/hw9yADFJMFjNR2brsEEk0M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Form","Display","jsxDEV","_jsxDEV","App","_s","boxColorArray","setBoxColorArray","ninjaBoxArray","setNinjaBoxArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/alexs/Desktop/CodingDojo/MERN/MERN-March/practice/boxgen ref/boxgen/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport Form from './components/Form';\nimport Display from './components/Display';\n\nfunction App() {\n  // holding an array of strings for the colors input\n  const [ boxColorArray, setBoxColorArray ] = useState([]);\n\n  // Ninja Bonus: Add a second input that takes in an integer. \n  //    This integer will allow the user to specify the height and width of the generated box.\n  //    Using an object to hold both the integer and the color together\n  const [ ninjaBoxArray, setNinjaBoxArray ] = useState([])\n\n  return (\n    <div className=\"App\">\n      <h1>Standard Assignment</h1>\n      <Form boxColorArray={ boxColorArray } setBoxColorArray={ setBoxColorArray } />\n      <Display boxColorArray={ boxColorArray } />\n      \n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAAEC,aAAa,EAAEC,gBAAgB,CAAE,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA;EACA;EACA,MAAM,CAAES,aAAa,EAAEC,gBAAgB,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExD,oBACEI,OAAA;IAAKO,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBR,OAAA;MAAAQ,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC5BZ,OAAA,CAACH,IAAI;MAACM,aAAa,EAAGA,aAAe;MAACC,gBAAgB,EAAGA;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9EZ,OAAA,CAACF,OAAO;MAACK,aAAa,EAAGA;IAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEvC;AAEV;AAACV,EAAA,CAjBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}