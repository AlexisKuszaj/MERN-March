{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexs\\\\Desktop\\\\CodingDojo\\\\MERN\\\\MERN-March\\\\practice\\\\boxgen\\\\boxgen\\\\src\\\\components\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = props => {\n  _s();\n  // using the getter and setter that were passed from my parent (App.js) component\n  const {\n    boxColorArray,\n    setBoxColorArray\n  } = props;\n\n  // create state that can only be seen by this component\n  //    this is the state to keep track of the text box input value\n  const [color, setColor] = useState(\"\");\n  const submitHandler = event => {\n    // we must prevent the browser from refreshing the page when a form is submitted\n    //    if we do not prevent the default behavior we will lose all values in state\n    event.preventDefault();\n\n    // add our new color to the boxArray WITHOUT losing what is already in there\n    //    we need to create a new array and spread out the current values first\n    //    then we add the new color as the last element in the array\n    setBoxColorArray([...boxColorArray, color]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      style: {\n        margin: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"color\",\n          onChange: e => setColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"9Ufmb6kiII75QoOjngqi2ks+0+M=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","props","_s","boxColorArray","setBoxColorArray","color","setColor","submitHandler","event","preventDefault","children","onSubmit","style","margin","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/alexs/Desktop/CodingDojo/MERN/MERN-March/practice/boxgen/boxgen/src/components/Form.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Form = (props) => {\r\n  // using the getter and setter that were passed from my parent (App.js) component\r\n  const { boxColorArray, setBoxColorArray } = props;\r\n\r\n  // create state that can only be seen by this component\r\n  //    this is the state to keep track of the text box input value\r\n  const [ color, setColor] = useState(\"\");\r\n  \r\n  const submitHandler = (event) => {\r\n    // we must prevent the browser from refreshing the page when a form is submitted\r\n    //    if we do not prevent the default behavior we will lose all values in state\r\n    event.preventDefault();\r\n\r\n    // add our new color to the boxArray WITHOUT losing what is already in there\r\n    //    we need to create a new array and spread out the current values first\r\n    //    then we add the new color as the last element in the array\r\n    setBoxColorArray( [ ...boxColorArray, color ] );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={ submitHandler } style={{ margin: \"20px\" }}>\r\n        <div>\r\n          <label htmlFor=\"firstName\">Color</label>\r\n          <input \r\n            type=\"text\" \r\n            name=\"color\"\r\n            onChange={ (e) => setColor(e.target.value) }\r\n          />\r\n        </div>\r\n        <button>Add</button>\r\n      </form>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB;EACA,MAAM;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAAGH,KAAK;;EAEjD;EACA;EACA,MAAM,CAAEI,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEvC,MAAMU,aAAa,GAAIC,KAAK,IAAK;IAC/B;IACA;IACAA,KAAK,CAACC,cAAc,EAAE;;IAEtB;IACA;IACA;IACAL,gBAAgB,CAAE,CAAE,GAAGD,aAAa,EAAEE,KAAK,CAAE,CAAE;EACjD,CAAC;EAED,oBACEN,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAMY,QAAQ,EAAGJ,aAAe;MAACK,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAH,QAAA,gBACzDX,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAOe,OAAO,EAAC,WAAW;UAAAJ,QAAA,EAAC;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACxCnB,OAAA;UACEoB,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,OAAO;UACZC,QAAQ,EAAIC,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK;QAAG;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNnB,OAAA;QAAAW,QAAA,EAAQ;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACf;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEL;AAER,CAAC;AAAAhB,EAAA,CAnCKF,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}